import pandas as pd
import os
# This code until line #40 was generated by chatgpt using the prompts at annotate_probe_seqs.prompt.txt

# Input data
data = {
    "Item ID": [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],
    "Sample Name": [
        "104_1","104_2","70_1","78_1","104_3","70_3","78_3",
        "70_2","78_2","104_4","70_4","78_4","104_5","70_5","78_5"
    ],
    "Group Name": [
        "IFN-alpha","IFN-lambda","IFN-alpha","IFN-alpha",
        "Untreated","Untreated","Untreated",
        "IFN-lambda","IFN-lambda",
        "SARS-CoV-2-16h","SARS-CoV-2-16h","SARS-CoV-2-16h",
        "SARS-CoV-2-72h","SARS-CoV-2-72h","SARS-CoV-2-72h"
    ]
}

df = pd.DataFrame(data)

# Unique groups (excluding "Untreated")
groups = [g for g in df["Group Name"].unique() if g != "Untreated"]

# Initialize output
df_out = pd.DataFrame({"sample_name": df["Sample Name"]})

# For each group, assign treated/untreated
for g in groups:
    colname = g.replace(" ", "_").replace("-", "_")  # safe colnames
    df_out[colname] = df["Group Name"].apply(
        lambda x: "_treated" if x == g else "_untreated"
    )

# Save to TSV

print(df_out.head(10))

# Save to TSV
outdir="output/generate_compatible_sample_sheet"
os.makedirs(outdir,exist_ok=True)
df_out.to_csv(os.path.join(outdir,"compatible_sample_sheet.tsv"), sep="\t", index=False)

print(df_out.head())
