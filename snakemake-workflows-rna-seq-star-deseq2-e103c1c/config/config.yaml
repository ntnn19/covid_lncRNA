# path or URL to sample sheet (TSV format, columns: sample, condition, ...)
samples: config/samples.tsv
# path or URL to sequencing unit sheet (TSV format, columns: sample, unit, fq1, fq2)
# Units are technical replicates (e.g. lanes, or resequencing of the same biological
# sample).
units: config/units.tsv


ref:
  # Ensembl species name
  species: saccharomyces_cerevisiae
  # Ensembl release
  release: 100
  # Genome build
  build: R64-1-1


trimming:
  # If you activate trimming by setting this to `True`, you will have to
  # specify the respective cutadapt adapter trimming flag for each unit
  # in the `units.tsv` file's `adapters` column
  activate: True

mergeReads:
  activate: False

pca:
  activate: True
  # Per default, a separate PCA plot is generated for each of the
  # `variables_of_interest` and the `batch_effects`, coloring according to
  # that variables groups.
  # If you want PCA plots for further columns in the samples.tsv sheet, you
  # can request them under labels as a list, for example:
  # - relatively_uninteresting_variable_X
  # - possible_batch_effect_Y
  labels:
    - condition

diffexp:
  # variables where you are interested in whether they have
  # an effect on expression levels
  variables_of_interest:
    IFN_alpha:
      # any fold change will be relative to this factor level
      base_level: Untreated
    IFN_lambda:
      # any fold change will be relative to this factor level
      base_level: Untreated
    SARS_CoV_2_16h:
      # any fold change will be relative to this factor level
      base_level: Untreated
    SARS_CoV_2_72h:
      # any fold change will be relative to this factor level
      base_level: Untreated
  contrasts:
    IFN_alpha_treated_vs_Untreated:
      variable_of_interest: condition
      level_of_interest: IFN_alpha_treated
      # base_level defaults to the first level of the factor, or specify explicitly
      base_level: Untreated

    IFN_lambda_treated_vs_Untreated:
      variable_of_interest: condition
      level_of_interest: IFN_lambda_treated
      base_level: Untreated

    SARS_CoV_2_16h_treated_vs_Untreated:
      variable_of_interest: condition
      level_of_interest: SARS_CoV_2_16h_treated
      base_level: Untreated

    SARS_CoV_2_72h_treated_vs_Untreated:
      variable_of_interest: condition
      level_of_interest: SARS_CoV_2_72h_treated
      base_level: Untreated

    # For comparisons between treatments (not against base)
    IFN_lambda_treated_vs_IFN_alpha_treated:
      contrast_expression: "IFN_lambda_treated - IFN_alpha_treated"

    SARS_CoV_2_16h_treated_vs_IFN_alpha_treated:
      contrast_expression: "SARS_CoV_2_16h_treated - IFN_alpha_treated"

    SARS_CoV_2_72h_treated_vs_IFN_alpha_treated:
      contrast_expression: "SARS_CoV_2_72h_treated - IFN_alpha_treated"

    SARS_CoV_2_16h_treated_vs_IFN_lambda_treated:
      contrast_expression: "SARS_CoV_2_16h_treated - IFN_lambda_treated"

    SARS_CoV_2_72h_treated_vs_IFN_lambda_treated:
      contrast_expression: "SARS_CoV_2_72h_treated - IFN_lambda_treated"

    SARS_CoV_2_72h_treated_vs_SARS_CoV_2_16h_treated:
      contrast_expression: "SARS_CoV_2_72h_treated - SARS_CoV_2_16h_treated"
    #IFN_alpha_treated_vs_Untreated: "IFN_alpha_treated - Untreated"
    #IFN_lambda_treated_vs_Untreated: "IFN_lambda_treated - Untreated"
    #SARS_CoV_2_16h_treated_vs_Untreated: "SARS_CoV_2_16h_treated - Untreated"
    #SARS_CoV_2_72h_treated_vs_Untreated: "SARS_CoV_2_72h_treated - Untreated"

    #IFN_lambda_treated_vs_IFN_alpha_treated: "IFN_lambda_treated - IFN_alpha_treated"
    #SARS_CoV_2_16h_treated_vs_IFN_alpha_treated: "SARS_CoV_2_16h_treated - IFN_alpha_treated"
    #SARS_CoV_2_72h_treated_vs_IFN_alpha_treated: "SARS_CoV_2_72h_treated - IFN_alpha_treated"

    #SARS_CoV_2_16h_treated_vs_IFN_lambda_treated: "SARS_CoV_2_16h_treated - IFN_lambda_treated"
    #SARS_CoV_2_72h_treated_vs_IFN_lambda_treated: "SARS_CoV_2_72h_treated - IFN_lambda_treated"

    #SARS_CoV_2_72h_treated_vs_SARS_CoV_2_16h_treated: "SARS_CoV_2_72h_treated - SARS_CoV_2_16h_treated"
  # The default model includes all interactions among variables_of_interest,
  # and batch_effects added on. For the example above this implicitly is:
  # model: ~jointly_handled + treatment_1 * treatment_2
  # For the default model to be used, simply specify an empty `model: ""` below.
  # If you want to introduce different assumptions into your model, you can
  # specify a different model to use, for example skipping the interaction:
  # model: ~jointly_handled + treatment_1 + treatment_2
  model: "~0 + condition"
  #model: ~condition

params:
  cutadapt-pe: ""
  cutadapt-se: ""
  star: ""
